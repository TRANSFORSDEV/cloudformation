AWSTemplateFormatVersion: 2010-09-09
Description: This template creates a new VPC and deploys necessary infrastructure.
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: Network Configuration
      Parameters:
      - AvailabilityZones
      - VPCCIDR
      - VPCTenancy
    - Label:
        default: Network Configuration - WEB layer
      Parameters:
      - PublicSubnet1CIDR
      - PublicSubnet2CIDR
    - Label:
        default: Network Configuration - APP layer
      Parameters:
      - AppPrivateSubnet1CIDR
      - AppPrivateSubnet2CIDR
    # - Label:
    #     default: Network Configuration - DB layer
    #   Parameters:
    #   - DbPrivateSubnet1CIDR
    #   - DbPrivateSubnet2CIDR
    - Label:
        default: NatGateway
      Parameters:
      - CreateNatGateway
      - NATAllocationIdEIP
Parameters:
  StackNumber:
    Description: Use to avoid conflicts when deploy various instances of this instance
      with the same name; <prefix>-[00 | 01 | 02 | ...]-<name>
    Type: String
    Default: '00'
  MasterBaseStack:
    Description: Stack name of base stack.
    Type: String
    Default: MRDO-0001-MRD-MRDD-ST-01-MASTER-BASE
  VPCTenancy:
    AllowedValues:
    - default
    - dedicated
    Default: default
    Description: The allowed tenancy of instances launched into the VPC
    Type: String
  AvailabilityZones:
    Description: List of Availability Zones to use for the subnets in the VPC. You
      only need to select two Availability Zones and the order of your selections
      is preserved.
    Type: List<AWS::EC2::AvailabilityZone::Name>
    Default: us-east-1a,us-east-1b
  CreatePrivateSubnets:
    AllowedValues:
    - 'true'
    - 'false'
    Default: 'true'
    Description: Set to false to create only public subnets. If false, the CIDR parameters
      for ALL private subnets will be ignored.
    Type: String
  NumberOfAZs:
    AllowedValues:
    - '1'
    - '2'
    Default: '2'
    Description: Number of Availability Zones to use in the VPC. This must match your
      selections in the list of Availability Zones parameter.
    Type: String
  VPCCIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.60.0.0/16
    Description: CIDR block for the VPC. All the subnets and resources will have an
      IP within this address block.
    Type: String
  PublicSubnet1CIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.60.1.0/24
    Description: CIDR block for the public DMZ subnet 1 located in Availability Zone 1
    Type: String
  PublicSubnet2CIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.60.4.0/24
    Description: CIDR block for the public DMZ subnet 1 located in Availability Zone 1
    Type: String
  AppPrivateSubnet1CIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.60.2.0/24
    Description: CIDR block for private subnet 1A located in Availability Zone 1
    Type: String
  AppPrivateSubnet2CIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.60.5.0/24
    Description: CIDR block for private subnet 2A located in Availability Zone 2
    Type: String
  # DbPrivateSubnet1CIDR:
  #   AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
  #   ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
  #   Default: 10.60.3.0/24
  #   Description: CIDR block for private subnet 1A located in Availability Zone 1
  #   Type: String
  # DbPrivateSubnet2CIDR:
  #   AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
  #   ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
  #   Default: 10.60.6.0/24
  #   Description: CIDR block for private subnet 2A located in Availability Zone 2
  #   Type: String
  CreateNatGateway:
    Default: 'YES'
    Description: Indicador NatGateway
    Type: String
    AllowedValues:
    - 'YES'
    - 'NO'
Resources:
  VPCStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ../lib/templates/vpc/vpc.yaml
      Parameters:
        StackNumber: 
          Ref: StackNumber
        EnvironmentStack:
          Fn::ImportValue:
            Fn::Sub: '${MasterBaseStack}-EnvironmentStack'
        AvailabilityZones:
          Fn::Join:
          - ','
          - Ref: AvailabilityZones
        NumberOfAZs: 
          Ref: NumberOfAZs
        CreatePrivateSubnets: 
          Ref: CreatePrivateSubnets
        PublicSubnet1CIDR: 
          Ref: PublicSubnet1CIDR
        PublicSubnet2CIDR: 
          Ref: PublicSubnet2CIDR
        PrivateSubnet1ACIDR: 
          Ref: AppPrivateSubnet1CIDR
        PrivateSubnet2ACIDR: 
          Ref: AppPrivateSubnet2CIDR
        # PrivateSubnet3ACIDR: 
        #   Ref: DbPrivateSubnet1CIDR
        # PrivateSubnet4ACIDR: 
        #   Ref: DbPrivateSubnet2CIDR
        VPCCIDR: 
          Ref: VPCCIDR
        CreateNatGateway: 
          Ref: CreateNatGateway
Outputs:
  StackName:
    Description: Stack name.
    Value:
      Fn::Sub: ${AWS::StackName}
  VPCStack:
    Description: VPCStack.
    Value:
      Fn::GetAtt:
      - VPCStack
      - Outputs.StackName
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-VPCStack
  VPC:
    Description: VPC.
    Value:
      Fn::GetAtt:
      - VPCStack
      - Outputs.VPCID
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-VPC
  SubnetsPublic:
    Value:
      Fn::GetAtt:
      - VPCStack
      - Outputs.SubnetsPublic
    Description: SubnetsPublic
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-SubnetsPublic
  SubnetsApp:
    Value:
      Fn::GetAtt:
      - VPCStack
      - Outputs.SubnetsApp
    Description: SubnetsApp
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-SubnetsApp
  # SubnetsDB:
  #   Value:
  #     Fn::GetAtt:
  #     - VPCStack
  #     - Outputs.SubnetsDB
  #   Description: SubnetsDB
  #   Export:
  #     Name:
  #       Fn::Sub: ${AWS::StackName}-SubnetsDB